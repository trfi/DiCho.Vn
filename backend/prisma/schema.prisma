datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Vote {
  id     String  @id @default(cuid())
  post   Post @relation(fields: [postId], references: [id])
  postId String
  user   User @relation(fields: [userId], references: [id])
  userId String

  @@unique([postId, userId])
}

model User {
  id String @id @default(cuid())
  phone String  @unique
  password String
  phoneVerified Boolean?     @default("false")
  email String?  @unique
  emailVerified Boolean?
  name     String?
  username String?
  avatar   String?
  gender   Gender?
  birthday DateTime?
  address  String?
  role     Role?
  posts    Post[]
  votes    Vote[]
  created DateTime @default(now())
  updated DateTime @updatedAt
}

model Post {
  id String @id @default(cuid())
  title String
  thumbnail String
  category Category @relation(fields: [categoryId], references: [id])
  categoryId String
  broker Boolean    @default("false")
  params Json?
  region Int
  area   Int
  ward   Int
  price  Int
  postDetail Json?
  postedBy User      @relation(fields: [postedById], references: id)
  postedById String
  votes   Vote[]
  created DateTime   @default(now())
  updated DateTime    @updatedAt
}

model Category {
  id      String @id
  posts  Post[]
  title   String
  slug    String
  path    String?
  parent  String?
  children Json?
  type    String?
  created DateTime   @default(now())
  updated DateTime    @updatedAt
}

enum PostDetail {
  images
  content
  address
}

enum Params {
  acreage
  rooms
}

enum Types {
  S
  B
  T
  R
}

enum Gender {
  M
  F
  O
}

enum Role {
  USER
  ADMIN
  MODERATOR
}