datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Vote {
  id     String @id @default(cuid())
  post   Post   @relation(fields: [postId], references: [id])
  postId String
  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([postId, userId])
}

model User {
  id            String    @id @default(cuid())
  phone         String    @unique
  password      String
  phoneVerified Boolean?  @default("false")
  email         String?   @unique
  emailVerified Boolean?
  name          String?
  username      String?
  avatar        String?
  gender        Gender?
  birthday      DateTime?
  address       String?
  role          Role?     @default(USER)
  posts         Post[]
  votes         Vote[]
  comment       Comment[]
  liked         Liked[]
  created       DateTime  @default(now())
  updated       DateTime  @updatedAt
}

model Post {
  id         String    @id @default(cuid())
  title      String
  thumbnail  String?
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId String
  type       Type
  broker     Boolean   @default("false")
  params     Json?
  region     Int
  area       Int
  ward       Int
  price      Int
  images     Json?
  content    String
  address    String
  postedBy   User      @relation(fields: [postedById], references: id)
  postedById String
  like       Int?
  votes      Vote[]
  comment    Comment[]
  created    DateTime  @default(now())
  updated    DateTime  @updatedAt
}

model Liked {
  id String @id
  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Comment {
  id              String   @id
  content         String
  commentInPost   Post     @relation(fields: [commentInPostId], references: id)
  commentInPostId String
  commentByUser   User     @relation(fields: [commentByUserId], references: id)
  commentByUserId String
  created         DateTime @default(now())
  updated         DateTime @updatedAt
}

model Category {
  id       String   @id
  posts    Post[]
  title    String
  slug     String
  path     String?
  parent   String?
  children Json?
  type     String?
  created  DateTime @default(now())
  updated  DateTime @updatedAt
}

enum PostDetail {
  images
  content
  address
}

enum Params {
  acreage
  rooms
}

enum Type {
  S
  T
  B
  R
}

enum Gender {
  M
  F
  O
}

enum Role {
  ADMIN
  MODERATOR
  USER
}